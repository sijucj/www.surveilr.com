---
// Import the necessary dependencies
import { Image } from "astro:assets";
import FooterSocialLink from "@components/ui/links/FooterSocialLink.astro";
import EmailFooterInput from "@components/ui/forms/input/EmailFooterInput.astro";
import enStrings from "@utils/navigation.ts";
import frStrings from "@utils/fr/navigation.ts";
import Icon from "@components/ui/icons/Icon.astro";
import BrandLogo from "@components/surveilr-logo-with-tagline.png";
import { SITE } from "@data/constants";
import { exec } from "child_process";

//let LastCommitDate : string;

function getLastCommitDate(filePath: string = "."): Promise<Date> {
  return new Promise((resolve, reject) => {
    // Run the git command to get the last commit timestamp
    exec(`git log -1 --format=%ct ${filePath}`, (error, stdout, stderr) => {
      if (error) {
        return reject(`Error executing git command: ${stderr}`);
      }

      // Git returns the timestamp as seconds since the epoch
      const timestamp = parseInt(stdout.trim(), 10);
      if (isNaN(timestamp)) {
        return reject("Invalid timestamp returned by git");
      }

      // Convert the timestamp to a Date object
      const lastCommitDate = new Date(timestamp * 1000); // Convert seconds to milliseconds
      resolve(lastCommitDate);
    });
  });
}
const repositoryPath = process.cwd();
const lastCommitDate = await getLastCommitDate(repositoryPath);
//const formattedDate = `Last commit date: ${lastCommitDate.toLocaleDateString()}`;
const formattedDateTime = ` üï∞Ô∏è Publication created ${lastCommitDate
  .toLocaleString("en-US", {
    month: "short",
    day: "numeric",
    year: "numeric",
    hour: "numeric",
    minute: "2-digit",
    hour12: true,
  })
  .replace(",", "")
  .replace(" at", " at")}.`;

// Select the correct translation based on the page's lang prop:
const strings = Astro.currentLocale === "fr" ? frStrings : enStrings;

// Define the variables that will be used in this component
const sectionThreeTitle: string =
  Astro.currentLocale === "fr" ? "Rester √† jour" : "Stay up to date";
const sectionThreeContent: string =
  Astro.currentLocale === "fr"
    ? "Restez inform√© des derniers outils et des offres exclusives."
    : "Stay updated with the latest tools and exclusive deals.";
const crafted: string =
  Astro.currentLocale === "fr" ? "Fabriqu√© par" : "Crafted by";
---

<footer class="w-full bg-neutral-300 dark:bg-neutral-900">
  <div
    class="mx-auto w-full max-w-[85rem] px-4 py-10 sm:px-6 lg:px-16 lg:pt-20 2xl:max-w-screen-2xl"
  >
    <div class="grid grid-cols-2 gap-6 md:grid-cols-4 lg:grid-cols-5">
      <div class="col-span-full lg:col-span-1">
        <!-- Brand Logo -->
        <Image src={BrandLogo} alt="surveilr logo" />
      </div>
      <!-- An array of links for Pattern and Company sections -->
      {
        strings.footerLinks.map((section) => (
          <div class="col-span-1">
            <h3 class="font-bold text-neutral-800 dark:text-neutral-200">
              {section.section}
            </h3>
            <ul class="mt-3 grid space-y-3">
              {section.links.map((link, index) => (
                <li>
                  <a
                    href={link.url}
                    class="inline-flex gap-x-2 rounded-lg text-neutral-600 outline-none ring-zinc-500 transition duration-300 hover:text-neutral-500 focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-300 dark:focus:outline-none"
                  >
                    {link.name}
                  </a>
                  {section.section === "Company" && index === 2 ? (
                    <span class="ms-1 inline rounded-lg bg-orange-500 px-2 py-1 text-xs font-bold text-neutral-50">
                      We're hiring!
                    </span>
                  ) : null}
                </li>
              ))}
            </ul>
          </div>
        ))
      }

      <div class="col-span-2">
        <h3 class="font-bold text-neutral-800 dark:text-neutral-200">
          {sectionThreeTitle}
        </h3>

        <form>
          <EmailFooterInput />
          <p class="mt-3 text-sm text-neutral-600 dark:text-neutral-400">
            {sectionThreeContent}
          </p>
        </form>
      </div>
    </div>

    <div
      class="mt-9 grid gap-y-2 sm:mt-12 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
    >
      <div class="flex items-center justify-between">
        <p class="text-sm text-neutral-600 dark:text-neutral-400">
          ¬© <span id="current-year"></span>
          {SITE.organization}. {crafted}
          <a
            class="rounded-lg font-medium underline underline-offset-2 outline-none ring-zinc-500 transition duration-300 hover:text-neutral-700 hover:decoration-dashed focus:outline-none focus-visible:ring dark:ring-zinc-200 dark:hover:text-neutral-300"
            href="https://shahidshah.com"
            target="_blank"
            rel="noopener noreferrer">{SITE.author}</a
          >.
          <span>{formattedDateTime}</span>
        </p>
      </div>

      <!-- Social Brands -->
      <div>
        <FooterSocialLink url={strings.socialLinks.linkedIn}
          ><Icon name="linkedinFooter" />
        </FooterSocialLink>

        <FooterSocialLink url={strings.socialLinks.x}
          ><Icon name="xFooter" /></FooterSocialLink
        >

        <FooterSocialLink url={strings.socialLinks.github}
          ><Icon name="githubFooter" />
        </FooterSocialLink>

        <FooterSocialLink url={strings.socialLinks.google}
          ><Icon name="googleFooter" />
        </FooterSocialLink>

        <FooterSocialLink url={strings.socialLinks.discord}
          ><Icon name="discordFooter" />
        </FooterSocialLink>
      </div>
    </div>

    <script>
      const year = new Date().getFullYear();
      const element = document.getElementById("current-year");
      element!.innerText = year.toString();
    </script>
  </div>
</footer>
